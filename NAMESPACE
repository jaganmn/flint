useDynLib(flint, .registration = TRUE)
importFrom(methods, Complex, Math, Math2, Ops, Summary, as, coerce,
           initialize, new, setAs, setClass, setMethod, show)
exportClasses(flint, slong, ulong, fmpz, fmpq, mag, arf, acf, arb, acb)
exportMethods("!", "+", "-", "[", "[<-", "[[", "[[<-", all.equal,
              anyDuplicated, anyNA, as.raw, as.logical, as.integer,
              as.numeric, as.complex, as.character, as.list,
              as.expression, as.vector, c, duplicated, format,
              initialize, is.finite, is.infinite, is.na, is.nan, length,
              "length<-", log, mean, mtfrm, print, rep, show, unique,
              xtfrm)
exportMethods(Complex, Math, Math2, Ops, Summary, coerce)
exportMethods(Num, "Num<-", Den, "Den<-", Mid, "Mid<-", Rad, "Rad<-",
              Real, "Real<-", Imag, "Imag<-")
export(.slong, .ulong, .fmpz, .fmpq, .mag, .arf, .acf, .arb, .acb)
export(c.flint,
       flintBits,
       flintIdentical,
       flintPrec,
       flintRnd,
       flintVersion,
       arb_lambertw,
       acb_lambertw,
       arb_dirichlet_zeta,
       acb_dirichlet_zeta,
       arb_dirichlet_hurwitz,
       acb_dirichlet_hurwitz,
       acb_dirichlet_lerch_phi,
       arb_hypgeom_gamma,
       acb_hypgeom_gamma,
       arb_hypgeom_rgamma,
       acb_hypgeom_rgamma,
       arb_hypgeom_lgamma,
       acb_hypgeom_lgamma,
       acb_hypgeom_polygamma,
       arb_hypgeom_2f1,
       acb_hypgeom_2f1)
S3method(c, flint)
